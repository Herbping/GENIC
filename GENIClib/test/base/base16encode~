(define-fun E ((x (BitVec 8))) (BitVec 8) (ite (bvule x #x09) (bvadd x #x30) (bvadd x #x37))) (define-fun domain_E (x (BitVec 8)) (BitVec 8)  (bvult x #x10));
(define-fun B ((h (BitVec 8)) (l (BitVec 8)) (v (BitVec 8))) (BitVec 8)
   	(bvlshr (bvshl v (bvsub #x07 h)) (bvsub #x07 (bvsub h l))));
===
function S0 (l: (BitVec 8)) : (BitVec 8) :=
	match l with
	| x::tail when true;
		-> [(E (B #x07 #x04 x) );  (E (B #x03 #x00 y)) ] ++ F(tail)
===
isInjective S0;
invert S0;
