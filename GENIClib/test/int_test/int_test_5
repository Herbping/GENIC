
===
function S0 (l: Int) : Int :=
	match l with
	| x::y::z::tail when (and (= x 0) (> y 1) (> z 1));
		-> [1; (+ y 1); (+ z 2)] ++ S1(tail)
	| x::y::z::tail when (and (= x 1) (> y 1) (> z 1));
		-> [0; (- y 2); (- z 4)] ++ S1(tail)
function S1 (l: Int) : Int :=
	match l with
	| x::y::z::tail when (and (= x 0) (> y 2) (> z 2));
		-> [1; (+ y 2); (+ z 3)] ++ S2(tail)
	| x::y::z::tail when (and (= x 1) (> y 2) (> z 2));
		-> [0; (+ y 4); (+ z 6)] ++ S1(tail)
function S2 (l: Int) : Int :=
	match l with
	| x::y::z::tail when (and (= x 0) (> y 3) (> z 3));
		-> [1; (+ y 3); (+ z 4)] ++ S3(tail)
	| x::y::z::tail when (and (= x 1) (> y 3) (> z 3));
		-> [0; (+ y 6); (+ z 8)] ++ S2(tail)
function S3 (l: Int) : Int :=
	match l with
	| x::y::z::tail when (and (= x 0) (> y 4) (> z 4));
		-> [1; (+ y 4); (+ z 5)] ++ S4(tail)
	| x::y::z::tail when (and (= x 1) (> y 4) (> z 4));
		-> [0; (+ y 8); (+ z 10)] ++ S3(tail)
function S4 (l: Int) : Int :=
	match l with
	| x::y::z::tail when (and (= x 0) (> y 5) (> z 5));
		-> [1; (+ y 5); (+ z 6)] ++ S5(tail)
	| x::y::z::tail when (and (= x 1) (> y 5) (> z 5));
		-> [0; (+ y 10); (+ z 12)] ++ S4(tail)
function S5 (l: Int) : Int :=
	match l with
	| x::y::z::tail when (and (= x 0) (> y 6) (> z 6));
		-> [1; (+ y 6); (+ z 7)] ++ F(tail)
	| x::y::z::tail when (and (= x 1) (> y 6) (> z 6));
		-> [0; (+ y 12); (+ z 14)] ++ F(tail)
===
invert f;
