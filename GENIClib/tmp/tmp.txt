(declare-const y_1 Int)
(declare-const y_2 Int)
(declare-const y_3 Int)
(define-fun f_1 ((x Int)(y Int)(z Int)) Int1)
(define-fun f_2 ((x Int)(y Int)(z Int)) Int (+ y 1))
(define-fun f_3 ((x Int)(y Int)(z Int)) Int (+ z 2))
(define-fun Pred ((x Int)(y Int)(z Int)) Bool (and (= x 0) (> y 1) (> z 1)))
(assert (exists ((x Int)(y Int)(z Int)) (and  (Pred  x y z) (and (= y_1 (f_1  x y z))
(= y_2 (f_2  x y z))
(= y_3 (f_3  x y z))
))))
(apply qe)